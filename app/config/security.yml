security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
    access_denied_url:                      main_menu

    role_hierarchy:
        ROLE_VISU:          	ROLE_VISU
        ROLE_USER:          	ROLE_USER
        ROLE_TECH:          	ROLE_TECH
        ROLE_CADRE:         	ROLE_CADRE
        ROLE_TRADE_PICHON:  	ROLE_TRADE_PICHON
        ROLE_TRADE_GILIBERT:  	ROLE_TRADE_GILIBERT
        ROLE_COMPTA:        	ROLE_COMPTA
        ROLE_CHEF_BE:       	ROLE_CHEF_BE
        ROLE_DIRECTORY:     	ROLE_DIRECTORY
        ROLE_BE_USER:			ROLE_BE_USER
        ROLE_PICHON:        	[ROLE_TECH, ROLE_CADRE, ROLE_ADMIN]
        ROLE_TRADE:				[ROLE_TRADE_PICHON, ROLE_TRADE_GILIBERT]
        ROLE_ADMIN:         	[ROLE_ADMIN, ROLE_CHEF_BE, ROLE_COMPTA, ROLE_DIRECTORY]
        ROLE_SUPER_ADMIN:   	[ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
            id: fos_user.user_provider.username
    firewalls:
        main:
            form_login:
                # l'utilisateur est redirigé ici quand il/elle a besoin de se connecter
                login_path:                     fos_user_security_login

                # si défini à true, « forward » l'utilisateur vers le formulaire de
                # login au lieu de le rediriger
                use_forward:                    false

                # soumet le formulaire de login vers cette URL
                check_path:                     fos_user_security_check

                # par défaut, le formulaire de login *doit* être un POST,
                # et pas un GET
                post_only:                      true

                # options de redirection lorsque le login a réussi (vous
                # pouvez en lire plus ci-dessous)
                always_use_default_target_path: false
                default_target_path:            /
                target_path_parameter:          _target_path
                use_referer:                    false

                # options de redirection lorsque le login échoue (vous
                # pouvez en lire plus ci-dessous)
                failure_path:                   null
                failure_forward:                false

                # noms des champs pour le nom d'utilisateur et le mot
                # de passe
                username_parameter:             _username
                password_parameter:             _password

                # options du token csrf
                csrf_parameter:                 _csrf_token
                #intention:                      authenticate

            pattern: ^/
            anonymous: true
            provider: main
            logout:
                path:   fos_user_security_logout
                target: /
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    /logout
            form_login:
                check_path: fos_user_security_check
                login_path: fos_user_security_login
            logout:
                path:   /logout
                target: /

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/contact/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: .*/register/*, role: ROLE_ADMIN }
        - { path: .*/expense/.*, role: [ROLE_TRADE, ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: .*/menu, role: [ROLE_TECH, ROLE_CADRE, ROLE_VISU] }
        - { path: .*/schedule/.*, role: [ROLE_TECH, ROLE_CADRE, ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: .*/profile/.*, role: [ROLE_TECH, ROLE_CADRE, ROLE_SUPER_ADMIN, ROLE_ADMIN] }
        - { path: .*/admin/.*, role: [ROLE_ADMIN, ROLE_CHEF_BE, ROLE_COMPTA] }
        - { path: .*/absence/.*, role: [ROLE_ADMIN, ROLE_TECH, ROLE_CADRE] }
        - { path: .*/directory/admindirectory/.*, role: [ROLE_ADMIN, ROLE_DIRECTORY] }
