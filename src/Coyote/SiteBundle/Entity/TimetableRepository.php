<?php

namespace Coyote\SiteBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TimetableRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TimetableRepository extends EntityRepository
{
    public function myFindScheduleId($no_week, $year, $user_id)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('s.id')
           ->from('CoyoteSiteBundle:Schedule', 's')
           ->innerJoin('CoyoteSiteBundle:Timetable', 't', 'WITH', 't.id = s.timetable')
           ->where('s.user = :user and t.year = :year and t.no_week = :no_week')
           ->setParameters(array('user' => $user_id, 'year' => $year, 'no_week' => $no_week));
        $id_schedule =  $qb->getQuery()
                           ->getResult();

        return $id_schedule;
    }

    public function myFindTimetableId($no_week, $year)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('t.id')
           ->from('CoyoteSiteBundle:Timetable', 't')
           ->where('t.no_week = :no_week and t.year = :year')
           ->setParameters(array('no_week' => $no_week, 'year' => $year));
        $timetable_id =  $qb->getQuery()
                            ->getResult();

        return $timetable_id;
    }

    public function findPeriodByDate($date)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('t.pay_period')
           ->from('CoyoteSiteBundle:Timetable', 't')
           ->where('t.date = :date')
           ->setParameters(array('date' => $date));
        return $qb->getQuery()->getSingleScalarResult();
    }
}
